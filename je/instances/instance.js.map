{"version":3,"file":"instance.js","sourceRoot":"je-src/","sources":["instances/instance.ts"],"names":[],"mappings":"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","sourcesContent":["import { Point, Rect } from \"../math.js\";\r\nimport { Canvas, getCanvasInstance } from \"../canvas.js\";\r\nimport { AnyColor, Color } from \"../colors.js\";\r\nimport { ChildrenArray } from \"../childrenArray.js\";\r\nimport { GameMath, Radians, Angle } from \"../math.js\";\r\nimport { DrawDirection } from \"./types.js\";\r\nimport { Module } from \"./modules.js\";\r\n\r\n// add unique id for each instance\r\nlet lastInstanceId = 0;\r\n\r\n// optimize\r\nlet canvasInstance: Canvas | null = null;\r\n\r\nexport abstract class Instance extends ChildrenArray<Instance> {\r\n    private firstUpdate = false;\r\n    protected dontTranslate = false;\r\n    protected drawChildBottom = true;\r\n    /**\r\n     * Note: dont affect to text\r\n     */\r\n    drawDirection: DrawDirection = 'center';\r\n    index: number;\r\n    depth = 0;\r\n    x = 0;\r\n    y = 0;\r\n    clipStroke = false;\r\n\r\n    constructor() {\r\n        super();\r\n        this.index = ++lastInstanceId;\r\n        this.onCreate();\r\n    }\r\n\r\n    onCreate() {}\r\n    onBegin() {}\r\n    onDestroy() {}\r\n\r\n    onUpdate() {}\r\n\r\n    onDraw() {}\r\n\r\n    _update(ctx: CanvasRenderingContext2D) {\r\n        const children = [...this.children]; // copy array\r\n        const updateChildren = () => children.sort((a, b) => a.depth - b.depth).forEach(child => child._update(ctx));\r\n        ctx.save();\r\n        this.onUpdate();\r\n        if (!this.dontTranslate) ctx.translate(this.x, this.y);\r\n        if (!this.firstUpdate) {\r\n            this.onBegin();\r\n            this.firstUpdate = true;\r\n        }\r\n        if (this.drawChildBottom) updateChildren();\r\n        this.onDraw();\r\n        if (!this.drawChildBottom) updateChildren();\r\n        ctx.restore();\r\n    }\r\n\r\n    addModule<T extends Module>(module: T): T {\r\n        module.load(this);\r\n        return module;\r\n    }\r\n\r\n    translate(x: number, y: number) {\r\n        this.ctx.translate(x, y);\r\n    }\r\n\r\n    rotate(radians: Radians) {\r\n        this.ctx.rotate(radians);\r\n    }\r\n\r\n    rotateAngle(angle: Angle) {\r\n        this.rotate(GameMath.toRadians(angle));\r\n    }\r\n\r\n    scale(x: number, y: number) {\r\n        this.ctx.scale(x, y);\r\n    }\r\n\r\n    save() {\r\n        this.ctx.save();\r\n    }\r\n\r\n    restore() {\r\n        this.ctx.restore();\r\n    }\r\n\r\n    get lineWidth() {\r\n        return this.ctx.lineWidth;\r\n    }\r\n\r\n    set lineWidth(w: number) {\r\n        this.ctx.lineWidth = w;\r\n    }\r\n\r\n    set fontAlign(align: CanvasTextAlign) {\r\n        this.ctx.textAlign = align;\r\n    }\r\n\r\n    private setColor(prop: 'fillStyle' | 'strokeStyle', c: AnyColor) {\r\n        this.ctx[prop] = typeof c == 'string' ? c : Array.isArray(c) ? Color.from(c[0], c[1], c[2], c[3]) : Color.convert(c);\r\n    }\r\n\r\n    set fillColor(c: AnyColor) {\r\n        this.setColor('fillStyle', c);\r\n    }\r\n\r\n    set strokeColor(c: AnyColor) {\r\n        this.setColor('strokeStyle', c);\r\n    }\r\n\r\n    set fontBaseline(baseline: CanvasTextBaseline) {\r\n        this.ctx.textBaseline = baseline;\r\n    }\r\n\r\n    set font(font: string) {\r\n        this.ctx.font = font;\r\n    }\r\n\r\n    protected getDirection(x: number, y: number, w: number, h: number, direction: DrawDirection = this.drawDirection) {\r\n        const dir: Record<DrawDirection, [number, number]> = {\r\n            'top-left': [x, y],\r\n            'top': [x + w / 2, y],\r\n            'top-right': [x + w, y],\r\n            'left': [x, y + h / 2],\r\n            'center': [x + w / 2, y + h / 2],\r\n            'right': [x + w, y + h / 2],\r\n            'bottom-left': [x, y + h],\r\n            'bottom': [x + w / 2, y + h],\r\n            'bottom-right': [x + w, y + h],\r\n        };\r\n        const [a, b] = dir[direction];\r\n        return [a - w, b - h] as [number, number];\r\n    }\r\n\r\n    rectangle(x: number, y: number, width: number, height: number) {\r\n        this.ctx.beginPath();\r\n        this.ctx.rect(...this.getDirection(x, y, width, height), width, height);\r\n        this.ctx.closePath();\r\n    }\r\n\r\n    roundRect(x: number, y: number, width: number, height: number, radius: number) {\r\n        this.ctx.beginPath();\r\n        this.ctx.roundRect(...this.getDirection(x, y, width, height), width, height, radius);\r\n        this.ctx.closePath();\r\n    }\r\n\r\n    circle(x: number, y: number, radius: number) {\r\n        this.ctx.beginPath();\r\n        this.ctx.arc(x, y, radius, 0, 2 * Math.PI);\r\n        this.ctx.closePath();\r\n    }\r\n\r\n    path(vertexes: Point[], closePath = true) {\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(vertexes[0].x, vertexes[0].y);\r\n        for (let i = 1; i < vertexes.length; i++) {\r\n            this.ctx.lineTo(vertexes[i].x, vertexes[i].y);\r\n        }\r\n        if (closePath) this.ctx.closePath();\r\n    }\r\n\r\n    polygon(angles: number, { scale, radians }: Partial<{ scale: number, radians: Radians }>) {\r\n        scale ??= 1;\r\n        radians ??= 0;\r\n        const theta = 2 * Math.PI / angles;\r\n        this.path(\r\n            Array.from({ length: angles }, (_, i) => new Point(\r\n                Math.cos(i * theta + (radians as number) / 180 * Math.PI) * (scale as number),\r\n                Math.sin(i * theta + (radians as number) / 180 * Math.PI) * (scale as number)\r\n            ))\r\n        );\r\n    }\r\n\r\n    fill(): void;\r\n    fill(color: AnyColor): void;\r\n    fill(color?: AnyColor) {\r\n        if (color) this.fillColor = color;\r\n        this.ctx.fill();\r\n    }\r\n\r\n    stroke(): void;\r\n    stroke(color: AnyColor): void;\r\n    stroke(color?: AnyColor) {\r\n        if (color) this.strokeColor = color;\r\n        if (this.clipStroke) {\r\n            this.save();\r\n            {\r\n                this.lineWidth *= 2;\r\n                this.ctx.clip();\r\n                this.ctx.stroke();\r\n                this.lineWidth /= 2;\r\n            }\r\n            this.restore();\r\n        } else {\r\n            this.ctx.stroke();\r\n        }\r\n    }\r\n\r\n    fillText(x: number, y: number, ...text: any[]) {\r\n        this.ctx.fillText(text.join(' '), x, y);\r\n    }\r\n\r\n    strokeText(x: number, y: number, ...text: any[]) {\r\n        this.ctx.strokeText(text.join(' '), x, y);\r\n    }\r\n\r\n    drawImage(image: HTMLImageElement, x: number, y: number, width: number, height: number) {\r\n        this.ctx.drawImage(image, ...this.getDirection(x, y, width, height), width, height);\r\n    }\r\n\r\n    /**\r\n     * @param value Alpha value from 0 to 1 (decimal).\r\n     */\r\n    set alpha(value: number) {\r\n        this.ctx.globalAlpha = value;\r\n    }\r\n\r\n    measureText(...text: any[]) {\r\n        return this.ctx.measureText(text.join(' '));\r\n    }\r\n\r\n    destroy(cleanup = true) {\r\n        this.onDestroy();\r\n        if (cleanup) this.children.forEach(child => child.destroy());\r\n        if (this.parent == null) {\r\n            this.canvas.instances.splice(this.canvas.instances.indexOf(this), 1);\r\n        } else {\r\n            this.parent.removeChild(this, false);\r\n        }\r\n    }\r\n\r\n    getRect(width: number, height: number, direction: DrawDirection = 'center') {\r\n        const { pos } = this;\r\n        return new Rect(...this.getDirection(pos.x, pos.y, width, height, direction), width, height);\r\n    }\r\n\r\n    isChildOf(parentClass: FunctionConstructor): boolean {\r\n        if (this.parent == null) return false;\r\n        if (this.parent instanceof parentClass) return true;\r\n        return this.parent.isChildOf(parentClass);\r\n    }\r\n\r\n    isClassOf(...instancesClasses: FunctionConstructor[]) {\r\n        for (const cls of instancesClasses) {\r\n            if (this instanceof cls)\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    addToMain() {\r\n        this.canvas.add(this);\r\n    }\r\n\r\n    get pos() {\r\n        const parent = this.parent ? this.parent.pos : new Point(0, 0);\r\n        return new Point(this.x + parent.x, this.y + parent.y);\r\n    }\r\n\r\n    set pos(p: Point) {\r\n        this.x = p.x;\r\n        this.y = p.y;\r\n    }\r\n\r\n    get canvas() {\r\n        if (!canvasInstance) canvasInstance = getCanvasInstance();\r\n        return canvasInstance;\r\n    }\r\n\r\n    get ctx() {\r\n        return this.canvas.ctx;\r\n    }\r\n}"]}