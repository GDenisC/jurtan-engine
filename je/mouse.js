import { getCanvasInstance } from "./canvas.js";
import { Point } from "./math.js";
const mouse = {
    buttons: new Set(),
    x: 0,
    y: 0
};
addEventListener('mousedown', e => {
    mouse.buttons.add(e.button);
});
addEventListener('mouseup', e => {
    mouse.buttons.delete(e.button);
});
let memory = null;
addEventListener('mousemove', e => {
    mouse.x = e.clientX;
    mouse.y = e.clientY;
});
export const Mouse = {
    isPressed: (button) => mouse.buttons.has(button),
    getPosition: () => {
        if (!memory) {
            memory = getCanvasInstance();
        }
        const rect = memory.tag.getBoundingClientRect();
        const ratio = [
            memory.width / rect.width,
            memory.height / rect.height
        ];
        return new Point(mouse.x - rect.left * ratio[0], mouse.y - rect.top * ratio[1]);
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW91c2UuanMiLCJzb3VyY2VSb290IjoiamUtc3JjLyIsInNvdXJjZXMiOlsibW91c2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFVLGlCQUFpQixFQUFFLE1BQU0sYUFBYSxDQUFBO0FBQ3ZELE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxXQUFXLENBQUE7QUFRakMsTUFBTSxLQUFLLEdBQWM7SUFDckIsT0FBTyxFQUFFLElBQUksR0FBRyxFQUFFO0lBQ2xCLENBQUMsRUFBRSxDQUFDO0lBQ0osQ0FBQyxFQUFFLENBQUM7Q0FDUCxDQUFBO0FBRUQsZ0JBQWdCLENBQUMsV0FBVyxFQUFFLENBQUMsQ0FBQyxFQUFFO0lBQzlCLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUNoQyxDQUFDLENBQUMsQ0FBQTtBQUVGLGdCQUFnQixDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUMsRUFBRTtJQUM1QixLQUFLLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDbkMsQ0FBQyxDQUFDLENBQUE7QUFFRixJQUFJLE1BQU0sR0FBa0IsSUFBSSxDQUFDO0FBRWpDLGdCQUFnQixDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUMsRUFBRTtJQUM5QixLQUFLLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUM7SUFDcEIsS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsT0FBTyxDQUFDO0FBQ3hCLENBQUMsQ0FBQyxDQUFBO0FBRUYsTUFBTSxDQUFDLE1BQU0sS0FBSyxHQUFHO0lBQ2pCLFNBQVMsRUFBRSxDQUFDLE1BQWMsRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDO0lBRXhELFdBQVcsRUFBRSxHQUFHLEVBQUU7UUFDZCxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ1QsTUFBTSxHQUFHLGlCQUFpQixFQUFFLENBQUM7U0FDaEM7UUFDRCxNQUFNLElBQUksR0FBRyxNQUFNLENBQUMsR0FBRyxDQUFDLHFCQUFxQixFQUFFLENBQUM7UUFDaEQsTUFBTSxLQUFLLEdBQUc7WUFDVixNQUFNLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLO1lBQ3pCLE1BQU0sQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLE1BQU07U0FDOUIsQ0FBQTtRQUNELE9BQU8sSUFBSSxLQUFLLENBQ1osS0FBSyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsSUFBSSxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFDOUIsS0FBSyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsR0FBRyxHQUFJLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FDakMsQ0FBQTtJQUNMLENBQUM7Q0FDSyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FudmFzLCBnZXRDYW52YXNJbnN0YW5jZSB9IGZyb20gXCIuL2NhbnZhcy5qc1wiXG5pbXBvcnQgeyBQb2ludCB9IGZyb20gXCIuL21hdGguanNcIlxuXG50eXBlIE1vdXNlVHlwZSA9IHtcbiAgICBidXR0b25zOiBTZXQ8bnVtYmVyPixcbiAgICB4OiBudW1iZXIsXG4gICAgeTogbnVtYmVyXG59XG5cbmNvbnN0IG1vdXNlOiBNb3VzZVR5cGUgPSB7XG4gICAgYnV0dG9uczogbmV3IFNldCgpLFxuICAgIHg6IDAsXG4gICAgeTogMFxufVxuXG5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCBlID0+IHtcbiAgICBtb3VzZS5idXR0b25zLmFkZChlLmJ1dHRvbik7XG59KVxuXG5hZGRFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgZSA9PiB7XG4gICAgbW91c2UuYnV0dG9ucy5kZWxldGUoZS5idXR0b24pO1xufSlcblxubGV0IG1lbW9yeTogQ2FudmFzIHwgbnVsbCA9IG51bGw7XG5cbmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIGUgPT4ge1xuICAgIG1vdXNlLnggPSBlLmNsaWVudFg7XG4gICAgbW91c2UueSA9IGUuY2xpZW50WTtcbn0pXG5cbmV4cG9ydCBjb25zdCBNb3VzZSA9IHtcbiAgICBpc1ByZXNzZWQ6IChidXR0b246IG51bWJlcikgPT4gbW91c2UuYnV0dG9ucy5oYXMoYnV0dG9uKSxcblxuICAgIGdldFBvc2l0aW9uOiAoKSA9PiB7XG4gICAgICAgIGlmICghbWVtb3J5KSB7XG4gICAgICAgICAgICBtZW1vcnkgPSBnZXRDYW52YXNJbnN0YW5jZSgpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHJlY3QgPSBtZW1vcnkudGFnLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgICAgICBjb25zdCByYXRpbyA9IFtcbiAgICAgICAgICAgIG1lbW9yeS53aWR0aCAvIHJlY3Qud2lkdGgsXG4gICAgICAgICAgICBtZW1vcnkuaGVpZ2h0IC8gcmVjdC5oZWlnaHRcbiAgICAgICAgXVxuICAgICAgICByZXR1cm4gbmV3IFBvaW50KFxuICAgICAgICAgICAgbW91c2UueCAtIHJlY3QubGVmdCAqIHJhdGlvWzBdLFxuICAgICAgICAgICAgbW91c2UueSAtIHJlY3QudG9wICAqIHJhdGlvWzFdXG4gICAgICAgIClcbiAgICB9XG59IGFzIGNvbnN0OyJdfQ==