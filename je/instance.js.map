{"version":3,"file":"instance.js","sourceRoot":"je-src/","sources":["instance.ts"],"names":[],"mappings":"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","sourcesContent":["import { Point, Rect } from \"./math.js\";\nimport { Canvas, getCanvasInstance } from \"./canvas.js\";\nimport { Color, createColor, toCanvasColor } from \"./colors.js\";\nimport { ChildrenArray } from \"./childrenArray.js\";\n\nlet _instanceId = 0;\n\nexport abstract class Instance extends ChildrenArray<Instance> {\n    private _canvas: Canvas | null = null;\n    private firstUpdate = false;\n    private clipStroke = false;\n    protected _dontTranslate = false;\n    protected drawChildBottom = true;\n    index: number;\n    depth = 0;\n    rotation = 0;\n    x = 0;\n    y = 0;\n\n    constructor() {\n        super();\n        this.index = ++_instanceId;\n        this.onCreate();\n    }\n\n    onCreate() {}\n    onBegin() {}\n    onDestroy() {}\n\n    onUpdate() {}\n\n    onDraw() {}\n\n    _update(ctx: CanvasRenderingContext2D) {\n        ctx.save();\n        this.onUpdate();\n        if (!this._dontTranslate) ctx.translate(this.x, this.y);\n        if (!this.firstUpdate) {\n            this.onBegin();\n            this.firstUpdate = true;\n        }\n        if (this.drawChildBottom) this.children.sort((a, b) => a.depth - b.depth).forEach(child => child._update(ctx));\n        this.onDraw();\n        if (!this.drawChildBottom) this.children.sort((a, b) => a.depth - b.depth).forEach(child => child._update(ctx));\n        ctx.restore();\n    }\n\n    setFontAlign(align: CanvasTextAlign) {\n        this.ctx.textAlign = align;\n    }\n\n    setFillColor(color: string) {\n        this.ctx.fillStyle = color;\n    }\n\n    setStrokeColor(color: string) {\n        this.ctx.strokeStyle = color;\n    }\n\n    setColor(color: Color): void;\n    setColor(r: number, g: number, b: number, a?: number): void;\n    setColor(color: string): void;\n    setColor(arg1: Color | number | string, arg2?: number, arg3?: number, arg4?: number) {\n        if (typeof arg1 === 'object') this.setColor(toCanvasColor(arg1));\n        else if (typeof arg1 === 'string') {\n            this.setFillColor(arg1);\n            this.setStrokeColor(arg1);\n        }\n        else this.setColor(createColor(arg1, arg2 as number, arg3 as number, arg4 as number));\n    }\n\n    setFontBaseline(baseline: CanvasTextBaseline) {\n        this.ctx.textBaseline = baseline;\n    }\n\n    setFont(font: string) {\n        this.ctx.font = font;\n    }\n\n    fillRect(x: number, y: number, width: number, height: number) {\n        this.ctx.fillRect(x - width / 2, y - height / 2, width, height);\n    }\n\n    fillCircle(x: number, y: number, radius: number) {\n        this.ctx.beginPath();\n        this.ctx.arc(x, y, radius, 0, 2 * Math.PI);\n        this.ctx.fill();\n    }\n\n    private stroke() {\n        if (this.clipStroke) {\n            this.ctx.save();\n            this.ctx.lineWidth *= 2;\n            this.ctx.clip();\n            this.ctx.stroke();\n            this.ctx.lineWidth /= 2;\n            this.ctx.restore();\n        } else {\n            this.ctx.stroke();\n        }\n    }\n\n    strokeRect(x: number, y: number, width: number, height: number) {\n        this.ctx.beginPath();\n        this.ctx.rect(x - width / 2, y - height / 2, width, height);\n        this.stroke();\n    }\n\n    strokeCircle(x: number, y: number, radius: number) {\n        this.ctx.beginPath();\n        this.ctx.arc(x, y, radius, 0, 2 * Math.PI);\n        this.stroke();\n    }\n\n    setClipStroke(clipStroke: boolean) {\n        this.clipStroke = clipStroke;\n    }\n\n    drawText(x: number, y: number, ...text: any[]) {\n        this.ctx.fillText(text.join(' '), x, y);\n    }\n\n    drawImage(image: HTMLImageElement, x: number, y: number, width: number, height: number) {\n        this.ctx.drawImage(image, x - width / 2,  y - height / 2, width, height);\n    }\n\n    setAlpha(value: number = 1) {\n        this.ctx.globalAlpha = value;\n    }\n\n    measureText(...text: any[]) {\n        return this.ctx.measureText(text.join(' '));\n    }\n\n    destroy(cleanup = true) {\n        if (cleanup) this.children.forEach(child => child.destroy());\n        this.onDestroy();\n        this.canvas.instances.splice(this.canvas.instances.indexOf(this), 1);\n    }\n\n    getRect(width: number, height: number) {\n        const { pos } = this;\n        return new Rect(pos.x - width / 2, pos.y - height / 2, width, height);\n    }\n\n    isClassOf(...instancesClasses: FunctionConstructor[]) {\n        for (const cls of instancesClasses) {\n            if (this instanceof cls)\n                return true;\n        }\n        return false;\n    }\n\n    addToCanvas() {\n        this.canvas.addChild(this);\n    }\n\n    get pos() {\n        const parent = this.parent ? this.parent.pos : new Point(0, 0);\n        return new Point(this.x + parent.x, this.y + parent.y);\n    }\n\n    set pos(p: Point) {\n        this.x = p.x;\n        this.y = p.y;\n    }\n\n    get canvas() {\n        if (!this._canvas) this._canvas = getCanvasInstance();\n        return this._canvas;\n    }\n\n    get ctx() {\n        return this.canvas.ctx;\n    }\n}"]}