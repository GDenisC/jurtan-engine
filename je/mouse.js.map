{"version":3,"file":"mouse.js","sourceRoot":"je-src/","sources":["mouse.ts"],"names":[],"mappings":"AAAA,OAAO,EAAU,iBAAiB,EAAE,MAAM,aAAa,CAAA;AACvD,OAAO,EAAE,YAAY,EAAE,MAAM,mBAAmB,CAAA;AAChD,OAAO,EAAE,KAAK,EAAE,MAAM,WAAW,CAAA;AAEjC,gBAAgB,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAA;AAC9D,gBAAgB,CAAC,SAAS,EAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAI,CAAC,CAAC,CAAC,CAAA;AAC9D,gBAAgB,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAA;AAE9D,IAAI,cAAc,GAAkB,IAAI,CAAC;AAEzC,MAAM,CAAC,MAAM,KAAK,GAAG,IAAI,KAAM,SAAQ,YAAY;IAI/C;QACI,KAAK,EAAE,CAAC;QAJZ,YAAO,GAAyB,IAAI,GAAG,EAAE,CAAC;QAC1C,aAAQ,GAAU,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAI9B,IAAI,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC;QAC5D,IAAI,CAAC,EAAE,CAAC,SAAS,EAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QACzD,IAAI,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE;YACrB,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,qBAAqB,EAAE,CAAC;YACrD,MAAM,KAAK,GAAG;gBACV,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK;gBAC9B,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM;aACnC,CAAA;YACD,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,CACrB,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,EAChC,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,GAAI,KAAK,CAAC,CAAC,CAAC,CACnC,CAAC;QACN,CAAC,CAAC,CAAC;IACP,CAAC;IAED,SAAS,CAAC,MAAc;QACpB,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACpC,CAAC;IAED,SAAS,CAAC,MAAc;;QACpB,OAAO,MAAA,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,mCAAI,KAAK,CAAC;IAC7C,CAAC;IAED,MAAM;QACF,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,IAAI,OAAO,EAAE;gBACT,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;aACnC;QACL,CAAC,CAAC,CAAA;IACN,CAAC;IAED,IAAI,MAAM;QACN,IAAI,CAAC,cAAc;YAAE,cAAc,GAAG,iBAAiB,EAAE,CAAC;QAC1D,OAAO,cAAc,CAAC;IAC1B,CAAC;IAKD,EAAE,CAAC,KAAa,EAAE,QAAkC;QAChD,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;IAC9B,CAAC;CACJ,CAAC","sourcesContent":["import { Canvas, getCanvasInstance } from \"./canvas.js\"\nimport { EventEmitter } from \"./eventEmitter.js\"\nimport { Point } from \"./math.js\"\n\naddEventListener('mousedown', e => Mouse.emit('mouseDown', e))\naddEventListener('mouseup',   e => Mouse.emit('mouseUp',   e))\naddEventListener('mousemove', e => Mouse.emit('mouseMove', e))\n\nlet canvasInstance: Canvas | null = null;\n\nexport const Mouse = new class extends EventEmitter {\n    buttons: Map<number, boolean> = new Map();\n    position: Point = new Point(0, 0);\n\n    constructor() {\n        super();\n        this.on('mouseDown', e => this.buttons.set(e.button, true));\n        this.on('mouseUp',   e => this.buttons.delete(e.button));\n        this.on('mouseMove', e => {\n            const rect = this.canvas.tag.getBoundingClientRect();\n            const ratio = [\n                this.canvas.width / rect.width,\n                this.canvas.height / rect.height\n            ]\n            this.position = new Point(\n                e.clientX - rect.left * ratio[0],\n                e.clientY - rect.top  * ratio[1]\n            );\n        });\n    }\n\n    isPressed(button: number) {\n        return this.buttons.has(button);\n    }\n\n    isClicked(button: number) {\n        return this.buttons.get(button) ?? false;\n    }\n\n    update() {\n        this.buttons.forEach((pressed, button) => {\n            if (pressed) {\n                this.buttons.set(button, false);\n            }\n        })\n    }\n\n    get canvas() {\n        if (!canvasInstance) canvasInstance = getCanvasInstance();\n        return canvasInstance;\n    }\n\n    on(event: 'mouseDown', listener: (e: MouseEvent) => any): void;\n    on(event: 'mouseUp', listener: (e: MouseEvent) => any): void;\n    on(event: 'mouseMove', listener: (e: MouseEvent) => any): void;\n    on(event: string, listener: (...args: any[]) => void) {\n        super.on(event, listener);\n    }\n};"]}