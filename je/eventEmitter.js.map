{"version":3,"file":"eventEmitter.js","sourceRoot":"je-src/","sources":["eventEmitter.ts"],"names":[],"mappings":"AAAA,MAAM,OAAO,YAAY;IAAzB;QACI,cAAS,GAA+B,EAAE,CAAC;IAW/C,CAAC;IATG,EAAE,CAAC,KAAa,EAAE,QAAkC;QAChD,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;YAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;QACvD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACzC,CAAC;IAED,IAAI,CAAC,KAAa,EAAE,GAAG,IAAW;QAC9B,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;YAAE,OAAO;QACnC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;IACjE,CAAC;CACJ","sourcesContent":["export class EventEmitter {\r\n    listeners: Record<string, Function[]> = {};\r\n\r\n    on(event: string, listener: (...args: any[]) => void) {\r\n        if (!this.listeners[event]) this.listeners[event] = [];\r\n        this.listeners[event].push(listener);\r\n    }\r\n\r\n    emit(event: string, ...args: any[]) {\r\n        if (!this.listeners[event]) return;\r\n        this.listeners[event].forEach(listener => listener(...args));\r\n    }\r\n}"]}