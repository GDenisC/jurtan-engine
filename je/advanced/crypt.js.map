{"version":3,"file":"crypt.js","sourceRoot":"je-src/","sources":["advanced/crypt.ts"],"names":[],"mappings":"AAAA,MAAM,OAAO,WAAW;IAKpB,YAAY,MAAc;QAF1B,UAAK,GAAG,CAAC,CAAC;QAGN,IAAI,CAAC,MAAM,GAAG,IAAI,WAAW,CAAC,MAAM,CAAC,CAAC;QACtC,IAAI,CAAC,IAAI,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC1C,CAAC;IAED,UAAU,CAAC,KAAa;QACpB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QACtC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC;IACpB,CAAC;IAED,WAAW,CAAC,KAAa;QACrB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QACvC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC;IACpB,CAAC;IAED,WAAW,CAAC,KAAa;QACrB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QACvC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC;IACpB,CAAC;IAED,SAAS,CAAC,KAAa;QACnB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QACrC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC;IACpB,CAAC;IAED,UAAU,CAAC,KAAa;QACpB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QACtC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC;IACpB,CAAC;IAED,UAAU,CAAC,KAAa;QACpB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QACtC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC;IACpB,CAAC;IAED,YAAY,CAAC,KAAa;QACtB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QACxC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC;IACpB,CAAC;IAED,YAAY,CAAC,KAAa;QACtB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QACxC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC;IACpB,CAAC;IAED,YAAY,CAAC,KAAa;QACtB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;YACnC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;SACxC;IACL,CAAC;IAED,aAAa,CAAC,KAAa;QACvB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;YACnC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;SACzC;IACL,CAAC;IAED,aAAa,CAAC,KAAa;QACvB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;YACnC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;SACzC;IACL,CAAC;IAED,KAAK;QACD,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACvC,CAAC;IAED,SAAS;QACL,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;CACJ;AAED,MAAM,OAAO,WAAW;IAIpB,YAAsB,MAAmB;QAAnB,WAAM,GAAN,MAAM,CAAa;QAFzC,UAAK,GAAG,CAAC,CAAC;QAGN,IAAI,CAAC,IAAI,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC1C,CAAC;IAED,SAAS;QACL,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7C,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC;QAChB,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,UAAU;QACN,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC9C,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC;QAChB,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,UAAU;QACN,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC9C,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC;QAChB,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,QAAQ;QACJ,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5C,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC;QAChB,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,SAAS;QACL,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7C,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC;QAChB,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,SAAS;QACL,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7C,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC;QAChB,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,WAAW;QACP,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC/C,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC;QAChB,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,WAAW;QACP,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC/C,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC;QAChB,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,WAAW;QACP,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAChC,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,EAAE,CAAC,EAAE;YAC7B,KAAK,IAAI,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;SAClD;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,YAAY;QACR,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAChC,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,EAAE,CAAC,EAAE;YAC7B,KAAK,IAAI,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;SACnD;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,YAAY;QACR,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAChC,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,EAAE,CAAC,EAAE;YAC7B,KAAK,IAAI,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;SACnD;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;CACJ;AAED,MAAM,CAAC,MAAM,KAAK,GAAG;IACjB,YAAY,EAAE,CAAC,IAAY,EAAE,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3D,YAAY,EAAE,CAAC,IAAY,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IAC3D,OAAO,EAAE,CAAC,IAAY,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC;IAC5D;;OAEG;IACH,SAAS,EAAE,CAAC,IAAY,EAAE,EAAE;QACxB,MAAM,KAAK,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC1C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;YAClC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;SACjC;QACD,OAAO,MAAM,CAAC,YAAY,CAAC,GAAG,IAAI,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;IACjE,CAAC;IACD;;OAEG;IACH,SAAS,EAAE,CAAC,IAAY,EAAE,EAAE;QACxB,MAAM,KAAK,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC3C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;YAClC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;SACjC;QACD,OAAO,MAAM,CAAC,YAAY,CAAC,GAAG,IAAI,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;IAChE,CAAC;CACK,CAAC","sourcesContent":["export class CryptWriter {\n    protected buffer: ArrayBuffer;\n    protected view: DataView;\n    index = 0;\n\n    constructor(length: number) {\n        this.buffer = new ArrayBuffer(length);\n        this.view = new DataView(this.buffer);\n    }\n\n    writeUint8(value: number) {\n        this.view.setUint8(this.index, value);\n        this.index += 1;\n    }\n\n    writeUint16(value: number) {\n        this.view.setUint16(this.index, value);\n        this.index += 2;\n    }\n\n    writeUint32(value: number) {\n        this.view.setUint32(this.index, value);\n        this.index += 4;\n    }\n\n    writeInt8(value: number) {\n        this.view.setInt8(this.index, value);\n        this.index += 1;\n    }\n\n    writeInt16(value: number) {\n        this.view.setInt16(this.index, value);\n        this.index += 2;\n    }\n\n    writeInt32(value: number) {\n        this.view.setInt32(this.index, value);\n        this.index += 4;\n    }\n\n    writeFloat32(value: number) {\n        this.view.setFloat32(this.index, value);\n        this.index += 4;\n    }\n\n    writeFloat64(value: number) {\n        this.view.setFloat64(this.index, value);\n        this.index += 8;\n    }\n\n    writeString8(value: string) {\n        this.writeUint8(value.length);\n        for (let i = 0; i < value.length; ++i) {\n            this.writeUint8(value.charCodeAt(i));\n        }\n    }\n\n    writeString16(value: string) {\n        this.writeUint8(value.length);\n        for (let i = 0; i < value.length; ++i) {\n            this.writeUint16(value.charCodeAt(i));\n        }\n    }\n\n    writeString32(value: string) {\n        this.writeUint8(value.length);\n        for (let i = 0; i < value.length; ++i) {\n            this.writeUint32(value.charCodeAt(i));\n        }\n    }\n\n    write() {\n        return new Uint8Array(this.buffer);\n    }\n\n    getBuffer() {\n        return this.buffer;\n    }\n}\n\nexport class CryptReader {\n    protected view: DataView;\n    index = 0;\n\n    constructor(protected buffer: ArrayBuffer) {\n        this.view = new DataView(this.buffer);\n    }\n\n    readUint8() {\n        const value = this.view.getUint8(this.index);\n        this.index += 1;\n        return value;\n    }\n\n    readUint16() {\n        const value = this.view.getUint16(this.index);\n        this.index += 2;\n        return value;\n    }\n\n    readUint32() {\n        const value = this.view.getUint32(this.index);\n        this.index += 4;\n        return value;\n    }\n\n    readInt8() {\n        const value = this.view.getInt8(this.index);\n        this.index += 1;\n        return value;\n    }\n\n    readInt16() {\n        const value = this.view.getInt16(this.index);\n        this.index += 2;\n        return value;\n    }\n\n    readInt32() {\n        const value = this.view.getInt32(this.index);\n        this.index += 4;\n        return value;\n    }\n\n    readFloat32() {\n        const value = this.view.getFloat32(this.index);\n        this.index += 4;\n        return value;\n    }\n\n    readFloat64() {\n        const value = this.view.getFloat64(this.index);\n        this.index += 8;\n        return value;\n    }\n\n    readString8() {\n        const length = this.readUint8();\n        let value = '';\n        for (let i = 0; i < length; ++i) {\n            value += String.fromCharCode(this.readUint8());\n        }\n        return value;\n    }\n\n    readString16() {\n        const length = this.readUint8();\n        let value = '';\n        for (let i = 0; i < length; ++i) {\n            value += String.fromCharCode(this.readUint16());\n        }\n        return value;\n    }\n\n    readString32() {\n        const length = this.readUint8();\n        let value = '';\n        for (let i = 0; i < length; ++i) {\n            value += String.fromCharCode(this.readUint32());\n        }\n        return value;\n    }\n}\n\nexport const Crypt = {\n    decodeBase64: (data: string) => Crypt.from8To16(atob(data)),\n    encodeBase64: (data: string) => btoa(Crypt.from16To8(data)),\n    reverse: (data: string) => data.split('').reverse().join(''),\n    /**\n     * Encodes data from 8 bit to 16 bit\n     */\n    from8To16: (data: string) => {\n        const bytes = new Uint8Array(data.length);\n        for (let i = 0; i < data.length; ++i) {\n            bytes[i] = data.charCodeAt(i);\n        }\n        return String.fromCharCode(...new Uint16Array(bytes.buffer));\n    },\n    /**\n     * Encodes data from 16 bit to 8 bit\n     */\n    from16To8: (data: string) => {\n        const bytes = new Uint16Array(data.length);\n        for (let i = 0; i < data.length; ++i) {\n            bytes[i] = data.charCodeAt(i);\n        }\n        return String.fromCharCode(...new Uint8Array(bytes.buffer));\n    }\n} as const;"]}