{"version":3,"file":"animation.js","sourceRoot":"je-src/","sources":["advanced/animation.ts"],"names":[],"mappings":"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","sourcesContent":["export abstract class Animation {\n    /**\n     * Returns the value of the animation\n     * @param x min 0, max 1\n     */\n    abstract getY(x: number): number;\n}\n\nexport class LinealAnimation {\n    getY(x: number) {\n        return x;\n    }\n}\n\nexport class QuadAnimation {\n    getY(x: number) {\n        return Math.pow(x, 2);\n    }\n}\n\nexport class LerpAnimation {\n    lerp(a: number, b: number, t: number) {\n        return a + (b - a) * t;\n    }\n\n    getY(x: number) {\n        return this.lerp(x, 1, x);\n    }\n}\n\nexport class CircAnimation {\n    getY(x: number) {\n        return 1 - Math.sin(Math.acos(x));\n    }\n}\n\nexport class BackAnimation {\n    constructor(public elastic = 1.5) {}\n\n    getY(x: number) {\n        return Math.pow(x, 2) * ((x + 1) * x - this.elastic);\n    }\n}\n\nexport class BounceAnimation {\n    getY(x: number) {\n        for (let a = 0, b = 1; 1; a += b, b /= 2) {\n            if (x >= (7 - 4 * a) / 11) {\n              return -Math.pow((11 - 6 * a - 11 * x) / 4, 2) + Math.pow(b, 2)\n            }\n        }\n    }\n}\n\nexport class ElasticAnimation {\n    constructor(public offset = 1.5) {}\n\n    getY(x: number) {\n        return Math.pow(2, 10 * (x - 1)) * Math.cos(20 * Math.PI * this.offset / 3 * x);\n    }\n}\n\nexport enum AnimationEndType {\n    Repeat,\n    Stop,\n    Reverse\n}\n\nexport enum AnimationType {\n    Normal,\n    Reversed,\n    Both\n}\n\nexport class Animator {\n    protected endTypes: Record<AnimationEndType, () => void>;\n    protected animTypes: Record<AnimationType, () => number>;\n    protected isReverse: boolean = false;\n    animation: (x: number) => number;\n    position: number = 0;\n\n    constructor(animation: Animation, public seconds: number = 1, public endType = AnimationEndType.Repeat, public animType = AnimationType.Normal) {\n        this.animation = animation.getY;\n\n        this.endTypes = {\n            [AnimationEndType.Repeat]: () => this.position = 0,\n            [AnimationEndType.Stop]: () => this.position = 1,\n            [AnimationEndType.Reverse]: () => {\n                this.isReverse = !this.isReverse;\n                this.position = this.isReverse ? 1 : 0;\n            }\n        }\n\n        this.animTypes = {\n            [AnimationType.Normal]: () => this.animation(this.position),\n            [AnimationType.Reversed]: () => this.easeOut(this.position),\n            [AnimationType.Both]: () => this.easeInOut(this.position)\n        }\n    }\n\n    update() {\n        if (this.isReverse ? this.position < 0 : this.position > 1) {\n            this.endTypes[this.endType]();\n        }\n        const result = this.animTypes[this.animType]();\n        this.position += this.stepSize * (this.isReverse ? -1 : 1);\n        return result;\n    }\n\n    easeOut(x: number) {\n        return 1 - this.animation(1 - x);\n    }\n\n    easeInOut(x: number) {\n        return x < 0.5 ? this.animation(x * 2) / 2 : (2 - this.animation(2 * (1 - x))) / 2;\n    }\n\n    get stepSize() {\n        return 1 / this.seconds;\n    }\n}"]}