{"version":3,"file":"canvas.js","sourceRoot":"je-src/","sources":["canvas.ts"],"names":[],"mappings":"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","sourcesContent":["import { Instance } from \"./instances\";\r\nimport { Point } from \"./math.js\";\r\nimport { Mouse } from \"./mouse.js\";\r\nimport { Keyboard } from \"./keyboard.js\";\r\n\r\ntype CanvasOtherOptions = {\r\n    render: 'pixelated' | 'crisp-edges' | 'auto',\r\n    smooth: boolean,\r\n    ratio: boolean\r\n}\r\n\r\ntype CanvasScreenOptions = {\r\n    width: number,\r\n    height: number,\r\n    fullscreen?: false\r\n};\r\n\r\ntype CanvasFullscreenOptions = {\r\n    fullscreen: true\r\n};\r\n\r\nexport type CanvasOptions<Options = CanvasOtherOptions> = (CanvasScreenOptions | CanvasFullscreenOptions) & Options;\r\n\r\nexport const getCanvasInstance = () => {\r\n    if (!Canvas.instance) {\r\n        throw new Error('Canvas not initialized');\r\n    }\r\n    return Canvas.instance;\r\n}\r\nexport const getInstances = () => getCanvasInstance().instances;\r\n\r\nexport class Canvas {\r\n    static instance: Canvas | null;\r\n    tag: HTMLCanvasElement;\r\n    ctx: CanvasRenderingContext2D;\r\n    instances: Instance[] = [];\r\n    camera: Point;\r\n    backgroundColor = 'rgb(30, 30, 30)';\r\n    options: CanvasOptions;\r\n    imagesToLoad: HTMLImageElement[] = [];\r\n\r\n    constructor(options: CanvasOptions<Partial<CanvasOtherOptions>> = { width: 1366, height: 768 }) {\r\n        if (!Canvas.instance) Canvas.instance = this;\r\n        else throw new Error('Canvas instance already exists, use getCanvasInstance() instead of new Canvas().')\r\n\r\n        options.ratio ??= true;\r\n        options.smooth ??= false;\r\n        options.render ??= 'auto';\r\n        options.fullscreen ??= false;\r\n\r\n        this.options = options as CanvasOptions;\r\n\r\n        this.tag = document.getElementById('canvas') as HTMLCanvasElement;\r\n\r\n        if (!this.tag)\r\n            throw new Error('Canvas not found');\r\n\r\n        if (!this.options.fullscreen) {\r\n            this.tag.width = this.options.width * this.ratio;\r\n            this.tag.height = this.options.height * this.ratio;\r\n        }\r\n\r\n        this.ctx = this.tag.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n        if (!this.ctx)\r\n            throw new Error('Canvas context not found');\r\n\r\n        this.camera = new Point(0, 0);\r\n\r\n        this.init();\r\n    }\r\n\r\n    private init() {\r\n        window.addEventListener('resize', () => this.resizeWindow())\r\n        this.resizeWindow();\r\n        this.tag.addEventListener('contextmenu', e => e.preventDefault())\r\n        this.tag.style.imageRendering = this.options.render;\r\n        this.ctx.imageSmoothingEnabled = this.options.smooth;\r\n    }\r\n\r\n    private resizeWindow() {\r\n        if (this.options.fullscreen) {\r\n            this.tag.style.width = `${window.innerWidth}px`;\r\n            this.tag.style.height = `${window.innerHeight}px`;\r\n            this.tag.width = window.innerWidth * this.ratio;\r\n            this.tag.height = window.innerHeight * this.ratio;\r\n            return;\r\n        }\r\n        const { width, height } = this.realSize;\r\n        this.tag.width = this.options.width * this.ratio;\r\n        this.tag.height = this.options.height * this.ratio;\r\n        this.tag.style.width = `${width}px`;\r\n        this.tag.style.height = `${height}px`;\r\n        this.tag.style.top = `${window.innerHeight / 2 - height / 2}px`;\r\n        this.tag.style.left = `${window.innerWidth / 2 - width / 2}px`;\r\n    }\r\n\r\n    loadImage(src: string) {\r\n        const image = this.imagesToLoad.find(i => i.id == src);\r\n        if (image) return image;\r\n        const img = new Image();\r\n        img.src = src;\r\n        img.id = src;\r\n        this.imagesToLoad.push(img);\r\n        return img;\r\n    }\r\n\r\n    loadAllImages(): Promise<HTMLImageElement[]> {\r\n        return new Promise(resolve => {\r\n            Promise.all(this.imagesToLoad.map(i => {\r\n                if (!i.complete) {\r\n                    return new Promise((resolve, reject) => {\r\n                        console.log('Loading image', i.src);\r\n                        i.addEventListener('load', resolve);\r\n                        i.addEventListener('error', reject);\r\n                    })\r\n                }\r\n                return null;\r\n            }).filter(i => i != null) as Promise<HTMLImageElement>[])\r\n            .then(res => resolve(res))\r\n            .catch(img => img.src = '')\r\n        });\r\n    }\r\n\r\n    renderLoop() {\r\n        const ctx = this.ctx;\r\n        ctx.fillStyle = this.backgroundColor;\r\n        ctx.fillRect(0, 0, this.width * this.ratio, this.height * this.ratio);\r\n        ctx.fillStyle = 'white';\r\n\r\n        ctx.save();\r\n        ctx.scale(this.ratio, this.ratio);\r\n        ctx.translate(this.camera.x, this.camera.y);\r\n\r\n        const sortedInstances = [...this.instances] // copy array\r\n                                    .sort((a, b) => a.depth - b.depth);\r\n\r\n        for (const instance of sortedInstances) {\r\n            instance._update(ctx);\r\n        }\r\n\r\n        ctx.restore();\r\n        Mouse.update();\r\n        Keyboard.update();\r\n        requestAnimationFrame(this.renderLoop.bind(this));\r\n    }\r\n\r\n    async runAsync() {\r\n        await this.loadAllImages();\r\n        this.renderLoop();\r\n    }\r\n\r\n    start() {\r\n        this.runAsync();\r\n    }\r\n\r\n    add(instance: Instance) {\r\n        this.instances.push(instance);\r\n    }\r\n\r\n    get width() {\r\n        return this.tag.width / this.ratio;\r\n    }\r\n\r\n    get height() {\r\n        return this.tag.height / this.ratio;\r\n    }\r\n\r\n    get realSize() {\r\n        return {\r\n            width: this.tag.width / this.ratio,\r\n            height: this.tag.height / this.ratio\r\n        };\r\n    }\r\n\r\n    get center() {\r\n        return new Point(this.width / 2, this.height / 2);\r\n    }\r\n\r\n    /**\r\n     * @description The ratio of the device (window)\r\n     */\r\n    get ratio() {\r\n        return this.options.ratio ? window.devicePixelRatio : 1;\r\n    }\r\n\r\n    get widthRatio() {\r\n        const { realSize } = this;\r\n        return realSize.width / realSize.height;\r\n    }\r\n\r\n    get heightRatio() {\r\n        const { realSize } = this;\r\n        return realSize.height / realSize.width;\r\n    }\r\n\r\n    /**\r\n     * Note: this is a `fullscreen` feature\r\n     * @description The ratio of the window\r\n     */\r\n    get screenRatio() {\r\n        return Math.min(this.widthRatio, this.heightRatio);\r\n    }\r\n}"]}