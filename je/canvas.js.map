{"version":3,"file":"canvas.js","sourceRoot":"je-src/","sources":["canvas.ts"],"names":[],"mappings":"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","sourcesContent":["import { Instance } from \"./instance.js\";\nimport { images } from \"./images.js\";\nimport { GameMath, Point } from \"./math.js\";\nimport { Mouse } from \"./mouse.js\";\nimport { Keyboard } from \"./keyboard.js\";\n\ntype CanvasOtherOptions = {\n    render: 'pixelated' | 'crisp-edges' | 'auto',\n    smooth: boolean,\n    ratio: boolean\n}\n\ntype CanvasScreenOptions = {\n    width: number,\n    height: number,\n    fullscreen?: false\n};\n\ntype CanvasFullscreenOptions = {\n    fullscreen: true\n};\n\nexport type CanvasOptions<Options = CanvasOtherOptions> = (CanvasScreenOptions | CanvasFullscreenOptions) & Options;\n\nexport const getCanvasInstance = () => {\n    if (!Canvas.instance) {\n        throw new Error('Canvas not initialized');\n    }\n    return Canvas.instance;\n}\nexport const getInstances = () => getCanvasInstance().instances;\n\nexport class Canvas {\n    static instance: Canvas | null;\n    tag: HTMLCanvasElement;\n    ctx: CanvasRenderingContext2D;\n    instances: Instance[] = [];\n    camera: Point;\n    backgroundColor = 'rgb(30, 30, 30)';\n    options: CanvasOptions;\n\n    constructor(options: CanvasOptions<Partial<CanvasOtherOptions>> = { width: 1366, height: 768 }) {\n        if (!Canvas.instance) Canvas.instance = this;\n        else throw new Error('Canvas instance already exists, use getCanvasInstance() instead of new Canvas().')\n\n        options.ratio ??= true;\n        options.smooth ??= false;\n        options.render ??= 'auto';\n        options.fullscreen ??= false;\n\n        this.options = options as CanvasOptions;\n\n        this.tag = document.getElementById('canvas') as HTMLCanvasElement;\n\n        if (!this.tag)\n            throw new Error('Canvas not found');\n\n        if (!this.options.fullscreen) {\n            this.tag.width = this.options.width * this.ratio;\n            this.tag.height = this.options.height * this.ratio;\n        }\n\n        this.ctx = this.tag.getContext('2d') as CanvasRenderingContext2D;\n\n        if (!this.ctx)\n            throw new Error('Canvas context not found');\n\n        this.camera = new Point(0, 0);\n\n        this.init();\n    }\n\n    private init() {\n        window.addEventListener('resize', () => this.resizeWindow())\n        this.resizeWindow();\n        this.tag.addEventListener('contextmenu', e => e.preventDefault())\n        this.tag.style.imageRendering = this.options.render;\n        this.ctx.imageSmoothingEnabled = this.options.smooth;\n    }\n\n    private resizeWindow() {\n        if (this.options.fullscreen) {\n            this.tag.style.width = `${window.innerWidth}px`;\n            this.tag.style.height = `${window.innerHeight}px`;\n            this.tag.width = window.innerWidth * this.ratio;\n            this.tag.height = window.innerHeight * this.ratio;\n            return;\n        }\n        const { width, height } = this.realSize;\n        this.tag.width = this.options.width * this.ratio;\n        this.tag.height = this.options.height * this.ratio;\n        this.tag.style.width = `${width}px`;\n        this.tag.style.height = `${height}px`;\n        this.tag.style.top = `${window.innerHeight / 2 - height / 2}px`;\n        this.tag.style.left = `${window.innerWidth / 2 - width / 2}px`;\n    }\n\n    loadAllImages(): Promise<HTMLImageElement[]> {\n        return new Promise(resolve => {\n            Promise.all(images.map(i => {\n                if (!i.complete) {\n                    return new Promise((resolve, reject) => {\n                        console.log('Loading image', i.src);\n                        i.onload = () => resolve(i);\n                        i.onerror = () => reject(i);\n                    })\n                }\n                return null;\n            }).filter(i => i != null) as Promise<HTMLImageElement>[])\n            .then(res => resolve(res))\n            .catch(img => img.src = '')\n        });\n    }\n\n    renderLoop() {\n        const ctx = this.ctx;\n        ctx.fillStyle = this.backgroundColor;\n        ctx.fillRect(0, 0, this.width * this.ratio, this.height * this.ratio);\n        ctx.fillStyle = 'white';\n\n        ctx.save();\n        ctx.scale(this.ratio, this.ratio);\n        ctx.translate(this.camera.x, this.camera.y);\n\n        const sortedInstance = this.instances.sort((a, b) => a.depth - b.depth);\n\n        for (const instance of sortedInstance) {\n            instance._update(ctx);\n        }\n\n        ctx.restore();\n        Mouse.update();\n        Keyboard.update();\n        requestAnimationFrame(this.renderLoop.bind(this));\n    }\n\n    async runAsync() {\n        await this.loadAllImages();\n        this.renderLoop();\n    }\n\n    start() {\n        this.runAsync();\n    }\n\n    add(instance: Instance) {\n        this.instances.push(instance);\n    }\n\n    get width() {\n        return this.tag.width / this.ratio;\n    }\n\n    get height() {\n        return this.tag.height / this.ratio;\n    }\n\n    get realSize() {\n        return {\n            width: this.tag.width / this.ratio,\n            height: this.tag.height / this.ratio\n        };\n    }\n\n    get center() {\n        return new Point(this.width / 2, this.height / 2);\n    }\n\n    get ratio() {\n        return this.options.ratio ? window.devicePixelRatio : 1;\n    }\n\n    get gameRatio() {\n        const { realSize } = this;\n        return Math.min(realSize.width / realSize.height, realSize.height / realSize.width);\n    }\n}"]}